<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SUNGHO KIM</title>
    <description>Data Science Portfolio</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Mon, 11 Sep 2017 12:23:36 -0400</pubDate>
    <lastBuildDate>Mon, 11 Sep 2017 12:23:36 -0400</lastBuildDate>
    <generator>Jekyll v3.5.2</generator>
    
      <item>
        <title>Exploring Chipotle Order Data</title>
        <description>I found a data is based on about 3,000 meals in about 1,800 Grubhub orders from July to December 2012. These are from two Chipotle restaurants in Wahsington D.C &amp;amp; East Lansing. It seemed interesting for me to explore dataset by asking questions like what items people order the most, what is the average order price and etc.

First, Load tsv file first by using Pandas and print(df.head(10)) to see the format of data and first 10 items on the list. I recommend you to do this on every data set, before you execute any commands on data.

import pandas as pd
df = pd.read_table('orders.tsv')
print(df.head(10))




As you can see it from table, the data is described by order_id, quantity, item_name, choice_descrptiption and price. Let’s try to look at which i is most popular on the list. You can use matplotlib.pyplot to visualize the data.

import matplotlib.pyplot as plt
items = df.item_name.value_counts().plot(kind=&quot;bar&quot;)
plt.show()


It seems like the most popular item is “Chicken Bowl” and unpopular items are “Carnitas Salad” and “Veggie Crispy Tacos”. Let’s zoom the graph little bit closer and see what those 10 items are. To do this, type the following command.

top10 = df.item_name.value_counts()[:10].plot(kind=&quot;bar&quot;)
plt.show()


Now you can see the name of items clearly than before. If you look at the top10 list, it is interesting to see that two items (Canned Soda, bottled water) from top10 are beverages. Let’s look at what kind of canned soda people ordered the most.

df['item_price'] = df['item_price'].str.replace('$','')  
df['item_price'] = df['item_price'].astype(float)
orders = df.groupby('order_id').sum()  
print(orders.head())


It was interesting to explore the items that are most ordered by cusomters from Chipolte. Now Let’s try to look at the data from business perspective and explore the data of price per order. First, you have to replace “$” with “” and change the data type to “float” in “item_price column” , because we would like to analyzes the numbers, instead of strings.

descriptions = df.groupby([&quot;item_name&quot;, &quot;choice_description&quot;])[&quot;order_id&quot;].count().reset_index(name=&quot;count&quot;)
descriptions = descriptions[descriptions['item_name'].str.contains(&quot;Canned Soda&quot;)]  
descriptions.sort_values('count',ascending=False)
print(descriptions)

descriptions.choice_description.value_counts().plot(kind=&quot;bar&quot;)
plt.show()


On average, it looks like people tend to spend 18.81 dollars per order. The minimum is 10.08 dollars per order and the maximum is 205 dollars per order. It is interesting to see that there is a person who orders 205 dollars worth of chipotle at one time. It looks like that person ordered catering or something.

It was fun to explore the data and find a trend in them. I am planning to post more like this in the future. If you have any questions, feedback, advice or corrections please get in touch with me on Linkedin or email me at sunghokim@wustl.edu I referred to this blog http://www.danielforsyth.me/pandas-burritos-analyzing-chipotle-order-data-2/ to write this post.

</description>
        <pubDate>Sun, 20 Aug 2017 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/2017/08/20/chipotle/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/08/20/chipotle/</guid>
        
        
      </item>
    
      <item>
        <title>New Notebook</title>
        <description>
</description>
        <pubDate>Sun, 01 May 2016 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/project1/2016/05/01/New-Notebook/</link>
        <guid isPermaLink="true">http://localhost:4000/project1/2016/05/01/New-Notebook/</guid>
        
        <category>jupyter</category>
        
        <category>workflows</category>
        
        <category>template</category>
        
        
        <category>project1</category>
        
      </item>
    
      <item>
        <title>New Post</title>
        <description>

Table of Contents


  Table of Contents
  Basic Functionality    
      Headers
    
  
  Header 1    
      Header 2        
          Header 3
        
      
      Styling
      Lists
      Links
      Images
      Code
      MathJax
      Tables
      Quotes
      Rule
      HTML
    
  
  Advanced Functionality    
      Color and Alignment
    
  
  Some Advanced Features    
      Data Projector
      STL
    
  


Basic Functionality

Headers

Header 1

Header 2

Header 3

Styling

Bold

Italics

Bold and Italics

Lists


  
    Item 1
  
  
    Item 2
  



  
    Unordered Item

    
      
        Sub Item 1

        
          Bold Sub Sub Ordered Item
        
      
    
  


Links

In-Line

I’m a reference-style link 1

I’m a reference-style link 1

Images

Hold your pointer clicked over the image to expand the view.



Code

Inline code.

import numpy as np
def hello_world():
    print('Hello World!'')

MathJax

Use MathJax for Math.


Tables


  
    
      Here
      is
      a
      row!
    
  
  
    
      is
      Left
      Center
      Right
    
    
      a
      cut
      it
      A
    
    
      column
      short
      B
      C
    
  


Quotes


  War does not decide who is right, only who is left.


Rule



HTML

Can write the whole post or sections in HTML for very specific needs. [For the advanced user or the code savvy.]

Advanced Functionality

Head over to the documentation page for tutorials on some basic html formatting and some extensions you can use for cool stuff like interactive 3D visualizations.

Color and Alignment

This text is centered.

This is a red text with blue and green inline text.

Some Advanced Features

Data Projector



STL



</description>
        <pubDate>Tue, 19 Apr 2016 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/project1/2016/04/19/New-Post/</link>
        <guid isPermaLink="true">http://localhost:4000/project1/2016/04/19/New-Post/</guid>
        
        <category>post</category>
        
        <category>template</category>
        
        
        <category>project1</category>
        
      </item>
    
  </channel>
</rss>
